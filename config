if [ $USE_THREADS != YES ]; then
    cat << END

$0: lua_io_nginx_module depends on the threads support, please reconfigure with "--with-threads" option.

END
    exit 1
fi

# threads support test has been done

# this is a workaround, to include the private header files in ngx_lua module,
# we need this to solve the context checking problem, and remember to add the
# ngx_lua module prior to this module. This embarrassed situation will be
# avoided if ngx_lua module can expose some APIs to allow us check the current
# request context.
for header in $HTTP_LUA_DEPS
do
    has=`echo $header | grep -q "ngx_http_lua_util.h"`
    if [ -n $has ]; then
        dir=`dirname $header`
        CORE_INCS="$CORE_INCS $dir"
        break
    fi
done

ngx_addon_name=ngx_http_lua_io_module
HTTP_LUA_IO_SRCS="$ngx_addon_dir/src/ngx_http_lua_io_module.c \
                  $ngx_addon_dir/src/ngx_http_lua_io.c \
                  $ngx_addon_dir/src/ngx_http_lua_io_input_filter.c"

HTTP_LUA_IO_DEPS="$ngx_addon_dir/src/ngx_http_lua_io.h \
                  $ngx_addon_dir/src/ngx_http_lua_io_input_filter.h"

if test -n "$ngx_module_link"; then
    ngx_module_type=HTTP
    ngx_module_name=$ngx_addon_name
    ngx_module_deps="$HTTP_LUA_IO_DEPS"
    ngx_module_srcs="$HTTP_LUA_IO_SRCS"

    . auto/module
else
    HTTP_MODULES="$HTTP_MODULES $ngx_addon_name"
    NGX_ADDON_SRCS="$NGX_ADDON_SRCS $HTTP_LUA_IO_SRCS"
    NGX_ADDON_DEPS="$NGX_ADDON_DEPS $HTTP_LUA_IO_DEPS"

    CORE_INCS="$CORE_INCS $ngx_module_incs"
    CORE_LIBS="$CORE_LIBS $ngx_module_libs"
fi
